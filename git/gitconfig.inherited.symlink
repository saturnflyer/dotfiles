[core]
  excludesfile = $HOME/.gitignore
  editor = vim
  whitespace = trailing-space,space-before-tab
  pager = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less

[init]
  templatedir = ~/.git_template

[apply]
  whitespace = fix

[color]
  ui = always

  interactive = true
  status = true
  branch = true
  diff = true

[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green bold
  newHighlight = green bold 22

[color "diff"]
  commit = green
  meta = yellow
  frag = cyan
  old = red
  new = green
  whitespace = red reverse

[alias]
  st = status
  ci = commit
  co = checkout
  br = branch
  ls = branch
  s  = status
  a  = add
  p  = add -p
  b  = branch
  d  = diff
  dc = diff --cached
  v  = show
  l  = log --pretty=oneline
  ll = log
  cp = cherry-pick
  c  = checkout
  cc = commit
  ri = rebase -i HEAD~10
  go = rebase --continue
  sh = !git-sh
  ro = !git fetch origin && git reset --hard origin/master
  report = log --pretty=format:'%h %ai %cn \n - %s'
  ok = mergetool
  whatsup = whatchanged -p --abbrev-commit --pretty=medium
  creport = log --pretty=format:'%Cred%h %C(bold green)%ai %C(bold blue)%cn \n - %s'
  where = "!f() { git grep -e \"$1\" -F $(git rev-list --all); }; f"
  added = log --diff-filter=A
  simple-graph = log --color --date-order --graph --oneline --decorate --simplify-by-decoration --all
  new = "add $(git ls-files -o --exclude-standard)"
  # locally (un)ignore files
  hide = !"git update-index --assume-unchanged"
  unhide = !"git update-index --no-assume-unchanged"
  #show ignored files
  hidden = !"git ls-files -v | grep '^[[:lower:]]'"

[credential]
  helper = osxkeychain


[merge]
	tool = opendiff
[push]
	default = simple
[pull]
	rebase = merges
	tags = true
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
[mergetool "sourcetree"]
	cmd = /opt/homebrew-cask/Caskroom/sourcetree/2.1/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
